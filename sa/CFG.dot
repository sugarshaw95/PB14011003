digraph unnamed {

	Node0xb74e710 [shape=record,label="{ [B0 (EXIT)]\l}"];
	Node0xb74e7e8 [shape=record,label="{ [B1]\l  1: 0\l  2: return [B1.1];\l}"];
	Node0xb74e7e8 -> Node0xb74e710;
	Node0xb74e8c0 [shape=record,label="{ [B2]\l  1: i\l  2: [B2.1]++\l}"];
	Node0xb74e8c0 -> Node0xb74edd8;
	Node0xb74e998 [shape=record,label="{ [B3]\l   T: break;\l}"];
	Node0xb74e998 -> Node0xb74e7e8;
	Node0xb74ea70 [shape=record,label="{ [B4]\l  1: i\l  2: [B4.1] (ImplicitCastExpr, LValueToRValue, int)\l  3: 9\l  4: [B4.2] == [B4.3]\l   T: if [B4.4]\l}"];
	Node0xb74ea70 -> Node0xb74e998;
	Node0xb74ea70 -> Node0xb74e8c0;
	Node0xb74eb68 [shape=record,label="{ [B5]\l  1: a\l  2: [B5.1]++\l}"];
	Node0xb74eb68 -> Node0xb74ea70;
	Node0xb74ec40 [shape=record,label="{ [B6]\l  1: i\l  2: [B6.1] (ImplicitCastExpr, LValueToRValue, int)\l  3: 2\l  4: [B6.2] % [B6.3]\l  5: 0\l  6: [B6.4] == [B6.5]\l   T: if [B6.6]\l}"];
	Node0xb74ec40 -> Node0xb74eb68;
	Node0xb74ec40 -> Node0xb74ea70;
	Node0xb74edd8 [shape=record,label="{ [B7]\l  1: i\l  2: [B7.1] (ImplicitCastExpr, LValueToRValue, int)\l  3: 10\l  4: [B7.2] \< [B7.3]\l   T: for (...; [B7.4]; ...)\l}"];
	Node0xb74edd8 -> Node0xb74ec40;
	Node0xb74edd8 -> Node0xb74e7e8;
	Node0xb74eef0 [shape=record,label="{ [B8]\l  1: int i;\l  2: 0\l  3: a\l  4: [B8.3] = [B8.2]\l  5: 0\l  6: i\l  7: [B8.6] = [B8.5]\l}"];
	Node0xb74eef0 -> Node0xb74edd8;
	Node0xb74f068 [shape=record,label="{ [B9 (ENTRY)]\l}"];
	Node0xb74f068 -> Node0xb74eef0;
}
